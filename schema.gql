# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Tweet {
  """Unique identifier"""
  id: ID!

  """Date of creation"""
  createdAt: DateTime!

  """Date of last update"""
  updatedAt: DateTime!

  """Text of the tweet"""
  text: String!

  """Get the user who created the tweet"""
  user: User

  """Get the users who liked the tweet"""
  likes: [User!]

  """Get the users who retweeted the tweet"""
  retweets: [User!]

  """Get the tweet to which the tweet is a reply"""
  replyTo: Tweet

  """Get the number of replies to the tweet"""
  repliesCount: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  """Unique identifier"""
  id: ID!

  """Date of creation"""
  createdAt: DateTime!

  """Date of last update"""
  updatedAt: DateTime!

  """Username of user"""
  username: String!

  """Email of user"""
  email: String!

  """Name of user"""
  name: String!

  """Birthday of user"""
  birthday: DateTime!

  """Get a user following"""
  following: [User!]

  """Get a user followers"""
  followers: [User!]
}

type TokensOutput {
  """Access Token of user"""
  accessToken: String!

  """Access Token of user"""
  refreshToken: String!
}

type SignInOutput {
  """Access Token of user"""
  accessToken: String!

  """Access Token of user"""
  refreshToken: String!

  """Current user"""
  user: User!
}

type SignUpOutput {
  """Access Token of user"""
  accessToken: String!

  """Access Token of user"""
  refreshToken: String!

  """Current user"""
  user: User!
}

type PaginationTweet {
  """Total number of nodes"""
  totalCount: Int!
  nodes: [Tweet!]!
}

type Query {
  """Get a user by args"""
  FindOneUser(input: FindOneUserInput!): User

  """Logout current user"""
  Logout: Boolean!

  """Get current user"""
  Profile: User

  """Refresh Tokens of current user"""
  RefreshTokens: TokensOutput!

  """Find all tweets with pagination"""
  PaginationTweet(
    """Skip the first n nodes"""
    skip: Int!

    """Take the first n nodes"""
    take: Int!

    """Sort nodes"""
    sortBy: PaginationSortBy
    where: PaginationTweetWhere
  ): PaginationTweet!

  """Find one tweet"""
  FindOneTweet(
    """Id of tweet"""
    id: ID!
  ): Tweet
}

input FindOneUserInput {
  """Username of user"""
  id: ID

  """Username of user"""
  username: String

  """Email of user"""
  email: String
}

input PaginationSortBy {
  """Sort by date of creation"""
  createdAt: SortDirection

  """Sort by date of last update"""
  updatedAt: SortDirection
}

enum SortDirection {
  ASC
  DESC
}

input PaginationTweetWhere {
  """Filter by id"""
  id: ID

  """Filter by content"""
  text: String

  """Filter by user id"""
  userId: ID

  """Filter by username"""
  username: String

  """Filter by reply to"""
  replyTo: ID

  """Filter by createdAt date"""
  createdAt: DateTime
}

type Mutation {
  """Update a user"""
  UpdateUser(input: UpdateUserInput!): User

  """Delete a user"""
  DeleteUser: User

  """Follow a user"""
  FollowUser(
    """Id of user"""
    id: ID!
  ): User

  """Sign up User"""
  SignUp(input: CreateUserInput!): SignUpOutput!

  """Sign in User"""
  SignIn(
    """Email of user"""
    email: String!

    """Password of user"""
    password: String!
  ): SignInOutput!

  """Create a new tweet"""
  CreateTweet(input: CreateTweetInput!): Tweet!

  """Delete a tweet"""
  DeleteTweet(
    """Id of tweet"""
    id: ID!
  ): ID

  """Like a tweet"""
  LikeTweet(
    """Id of tweet"""
    id: ID!
  ): Tweet

  """Retweet a tweet"""
  Retweet(
    """Id of tweet"""
    id: ID!
  ): Tweet

  """Reply to a tweet"""
  ReplyTweet(input: ReplyTweetInput!): Tweet
}

input UpdateUserInput {
  """Username of user"""
  username: String

  """Email of user"""
  email: String

  """Name of user"""
  name: String

  """Birthday of user"""
  birthday: DateTime

  """Password of user"""
  password: String
}

input CreateUserInput {
  """Username of user"""
  username: String!

  """Email of user"""
  email: String!

  """Name of user"""
  name: String!

  """Birthday of user"""
  birthday: DateTime!

  """Password of user"""
  password: String!
}

input CreateTweetInput {
  """Text of the tweet"""
  text: String!
}

input ReplyTweetInput {
  """ID of the tweet to reply"""
  id: ID!

  """Text of the tweet"""
  text: String!
}